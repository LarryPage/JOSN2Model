{
  "langName": "ObjectiveC - iOS",
  "hasHeaderFile": true,
  "modelStart": "",
  "basicTypesWithSpecialFetchingNeedsReplacements": [
    "integerValue",
    "boolValue",
    "charValue",
    "floatValue",
    "doubleValue",
    "longValue"
  ],
  "basicTypesWithSpecialStoringNeeds": [
    "NSInteger",
    "BOOL",
    "char",
    "CGFloat",
    "double",
    "long"
  ],
  "importForEachCustomType": "",
  "reservedKeywords": [
    "abstract",
    "assert",
    "boolean",
    "break",
    "byte",
    "case",
    "catch",
    "char",
    "class",
    "const",
    "continue",
    "default",
    "do",
    "double",
    "else",
    "enum",
    "extends",
    "false",
    "final",
    "finally",
    "float",
    "for",
    "goto",
    "if",
    "implements",
    "import",
    "instanceof",
    "int",
    "interface",
    "long",
    "native",
    "new",
    "null",
    "package",
    "private",
    "protected",
    "public",
    "return",
    "short",
    "static",
    "strictfp",
    "super",
    "switch",
    "synchronized",
    "this",
    "throw",
    "throws",
    "transient",
    "true",
    "try",
    "void",
    "volatile",
    "while",
    "id",
    "count",
    "class",
    "description"
  ],
  "briefDescription": "Defines how your JSON objects can be mapped to Objective-c classes using the built-in NSJSONSerialization class",
  "utilityMethods": [
    {
      "forEachProperty": "\n\t[dic removeObjectForKey:@\"<!VarName!>\"];\n\t[dic safeSetObject:self.<!VarName!> forKey:@\"<!ConstKeyName!>\"];",
      "bodyEnd": "\n}\n",
      "signature": "-(NSDictionary *)dic",
      "forEachPropertyWithSpecialStoringNeeds": "\n\t[dic removeObjectForKey:@\"<!VarName!>\"];\n\t[dic safeSetObject:@(self.<!VarName!>) forKey:@\"<!ConstKeyName!>\"];",
      "forEachArrayOfCustomTypeProperty": "\n\n\t[dic removeObjectForKey:@\"<!VarName!>\"];\n\tNSMutableArray *<!VarName!>Items = [NSMutableArray array];\n\tfor(<!ElementType!> *<!VarName!>Element in self.<!VarName!>){\n\t\t[<!VarName!>Items safeAddObject:[<!VarName!>Element dic]];\n\t}\n\t[dic safeSetObject:<!VarName!>Items forKey:@\"<!ConstKeyName!>\"];\n",
      "forEachCustomTypeProperty": "\n\t[dic removeObjectForKey:@\"<!VarName!>\"];\n\t[dic safeSetObject:[self.<!VarName!> dic] forKey:@\"<!ConstKeyName!>\"];",
      "returnStatement": "\n\treturn dic;\n",
      "body": "\tNSMutableDictionary *dic = [NSMutableDictionary dictionaryWithDictionary:[super dic]];",
      "comment": "\n/**\n * nativePropertyName and JosnKeyName are different ,replace them in dic() */\n",
      "bodyStart": "\n{\n"
    }
  ],
  "dataTypes": {
    "stringType": "NSString",
    "boolType": "BOOL",
    "floatType": "CGFloat",
    "doubleType": "double",
    "characterType": "char",
    "longType": "long",
    "intType": "NSInteger"
  },
  "wordsToRemoveToGetArrayElementsType": [
    "NSArray",
    "NSMutableArray"
  ],
  "constructors": [
    {
      "fetchBasicTypeWithSpecialNeedsPropertyFromMap": "\n\tself.<!VarName!> = [[NSString safeStringFromObject:[dic valueForKey:@\"<!ConstKeyName!>\"]] <!VarBasicTypeReplacement!>];",
      "fetchCustomTypePropertyFromMap": "\n\tself.<!VarName!> = [[<!VarType!> alloc] initWithDic:[NSDictionary safeDictionaryFromObject:[dic objectForKey:@\"<!ConstKeyName!>\"]]];",
      "bodyEnd": "\n\treturn self;\n}\n",
      "fetchBasicTypePropertyFromMap": "\n\tself.<!VarName!> = [NSString safeStringFromObject:[dic objectForKey:@\"<!ConstKeyName!>\"]];",
      "signature": "\n-(id)initWithDic:(NSDictionary *)dic\n",
      "fetchArrayOfCustomTypePropertyFromMap": "\n\n\tNSMutableArray *<!VarName!>Items = [[NSMutableArray alloc] init];\n\tNSArray *<!VarName!>Dics = [NSArray safeArrayFromObject:[dic valueForKey:@\"<!ConstKeyName!>\"]];\n\tfor(NSDictionary *<!VarName!>Dic in <!VarName!>Dics){\n\t\t[<!VarName!>Items safeAddObject:[[<!ElementType!> alloc] initWithDic:<!VarName!>Dic]];\n\t}\n\tself.<!VarName!> = <!VarName!>Items;\n",
      "comment": "\n/**\n * nativePropertyName and JosnKeyName are different ,replace them in initWithDic() \n */",
      "bodyStart": "{\n\tself = [super initWithDic:dic];"
    }
  ],
  "constVarDefinition": "NSString *const <!ConstKeyName!> = @\"<!JsonKeyName!>\";\n",
  "modelDefinition": "\n@JSONImplementation(<!ModelName!>)\n",
  "genericType": "NSObject",
  "headerFileData": {
    "modelDefinitionWithParent": "\n@JSONInterface(<!ModelName!>) : <!ParentClass!>\n",
    "modelEnd": "@end",
    "instanceVarDefinition": "@property (nonatomic, strong) <!VarType!> *<!VarName!>;\n",
    "utilityMethodSignatures": [
      "-(NSDictionary *)dic;\n"
    ],
    "constructorSignatures": [
      "-(id)initWithDic:(NSDictionary *)dic;\n"
    ],
    "typesNeedSpecialDefinition": [
      "NSInteger",
      "BOOL",
      "char",
      "CGFloat",
      "double",
      "long"
    ],
    "modelStart": "",
    "importParentHeaderFile": "#import \"<!ParentClass!>.h\"\n",
    "headerFileExtension": "h",
    "modelDefinition": "\n@JSONInterface(<!ModelName!>) : NSObject\n",
    "importForEachCustomType": "#import \"<!ModelName!>.h\"\n",
    "instanceVarWithSpeicalDefinition": "@property (nonatomic, assign) <!VarType!> <!VarName!>;\n",
    "staticImports": "#import <Foundation/Foundation.h>"
  },
  "fileExtension": "m",
  "arrayType": "NSArray",
  "basicTypesWithSpecialFetchingNeeds": [
    "NSInteger",
    "BOOL",
    "char",
    "CGFloat",
    "double",
    "long"
  ],
  "displayLangName": "ObjectiveC - iOS",
  "instanceVarDefinition": "",
  "supportsFirstLineStatement": "false",
  "modelEnd": "@end",
  "staticImports": "",
  "importHeaderFile": "#import \"<!ModelName!>.h\"\n"
}
